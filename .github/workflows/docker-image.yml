name: Publish Docker image

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'image tag'     
        required: true

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: frazergibsonntt/aws-esc-fargate-docker
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: frazergibsonntt/aws-esc-fargate-docker:${{ github.event.inputs.tag }}
          
  plan_deploy:
    defaults:
      run:
        working-directory: terraform
    runs-on: ubuntu-latest
    environment: 'deploy'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: ${{ github.workspace }}

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false # This is recommended so the `terraform show` command outputs valid JSON

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform init
      run: |
        terraform init -no-color -force-copy -input=false -upgrade=true -backend=true \
          -backend-config="bucket=${{ secrets.BACKEND_S3_BUCKET }}" \
          -backend-config="key=tf-${{ secrets.BACKEND_S3_BUCKET }}.tfstate" \
          -backend-config="region=${{ secrets.AWS_REGION }}" \
          -backend-config="dynamodb_table=${{ secrets.BACKEND_DYNAMO_TABLE }}" \
          -backend-config="encrypt=true"

    - name: Terraform validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform plan
      id: plan
      run: |
        terraform plan -out=tfplan \
          -var="image=frazergibsonntt/aws-esc-fargate-docker:${{ github.event.inputs.tag }}"

    - name: Terraform apply
      id: apply
      run: |
        terraform apply -input=false -no-color tfplan 

  destroy:
    defaults:
      run:
        working-directory: terraform
    needs: plan_deploy
    runs-on: ubuntu-latest
    environment: 'destroy'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: ${{ github.workspace }}

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false # This is recommended so the `terraform show` command outputs valid JSON

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform init
      run: |
        terraform init -no-color -force-copy -input=false -upgrade=true -backend=true \
          -backend-config="bucket=${{ secrets.BACKEND_S3_BUCKET }}" \
          -backend-config="key=tf-${{ secrets.BACKEND_S3_BUCKET }}.tfstate" \
          -backend-config="region=${{ secrets.AWS_REGION }}" \
          -backend-config="dynamodb_table=${{ secrets.BACKEND_DYNAMO_TABLE }}" \
          -backend-config="encrypt=true"

    - name: Terraform validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform plan
      id: plan
      run: |
        terraform plan -destroy -out=tfplan \
          -var="image=frazergibsonntt/aws-esc-fargate-docker:${{ github.event.inputs.tag }}"

    - name: Terraform destroy
      id: destroy
      run: |
        terraform apply --destroy -input=false -no-color -input=false tfplan 
